# -*- coding: utf-8 -*-
"""Education By Category

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1A6v7F4Mw-eFv8Jz-hjrjJoh6W6mocKwZ
"""

import streamlit as st
import pandas as pd
import plotly.express as px
import json

# ---------- Embedded India GeoJSON Data (Snippet) ----------
india_geojson = {
  "type": "FeatureCollection",
  "features": [
    {
      "type": "Feature",
      "id": "01",
      "properties": {"name": "Andaman & Nicobar Island"},
      "geometry": {
        "type": "Polygon",
        "coordinates": [[[92.2892, 10.5760], [92.8763, 11.2343], [93.1549, 13.0700], [92.2892, 10.5760]]]
      }
    },
    {
      "type": "Feature",
      "id": "02",
      "properties": {"name": "Andhra Pradesh"},
      "geometry": {
        "type": "Polygon",
        "coordinates": [[[78.5, 15.5], [81.5, 17.5], [80.0, 19.0], [78.5, 15.5]]]
      }
    }
    # Add remaining states for full map OR keep these for sample
  ]
}

# ---------- Page Setup ----------
st.set_page_config(page_title="India Education Dashboard", layout="wide")

st.markdown(
    """
    <style>
        body {
            background-color: #1B3C53;
            color: white;
        }
        .block-container {
            padding: 2rem;
        }
        .stButton>button, .stSelectbox, .stSlider, .stTextInput>div>div>input {
            background: rgba(255, 255, 255, 0.08);
            border-radius: 12px;
            backdrop-filter: blur(6px);
            color: white;
            border: 1px solid rgba(255,255,255,0.2);
        }
        .css-1v0mbdj, .stMarkdown, .stDataFrame {
            background-color: transparent;
        }
    </style>
    """,
    unsafe_allow_html=True
)

# ---------- Load Dataset ----------
df = pd.read_csv("education_state_income_detailed.csv")

st.title("üìò India Education & Income Dashboard")
st.markdown("Visualizing *education levels vs income classes* across Indian states.")

# ---------- Filters ----------
col1, col2 = st.columns(2)
with col1:
    state = st.selectbox("Choose State", df['State'].unique())
with col2:
    income_class = st.selectbox("Select Income Group", df['Income Class'].unique())

filtered = df[(df['State'] == state) & (df['Income Class'] == income_class)]

# ---------- Metric Cards ----------
col1, col2, col3, col4 = st.columns(4)
col1.metric("üìö Literacy Rate", f"{filtered['Literacy Rate (%)'].values[0]}%")
col2.metric("üè´ Primary", f"{filtered['Primary (%)'].values[0]}%")
col3.metric("üéì Graduation", f"{filtered['Graduation (%)'].values[0]}%")
col4.metric("üìñ Higher Secondary", f"{filtered['Higher Secondary (%)'].values[0]}%")

# ---------- Chart ----------
st.subheader("üìä Education Level Comparison")
chart_df = filtered[['Primary (%)', 'Secondary (%)', 'Higher Secondary (%)', 'Graduation (%)']].T.reset_index()
chart_df.columns = ['Level', 'Percentage']
fig = px.bar(chart_df, x='Level', y='Percentage', color='Level',
             color_discrete_sequence=['#456882', '#D2C1B6', '#F9F3EF', '#93DA97'])
st.plotly_chart(fig, use_container_width=True)

# ---------- Map ----------
st.subheader("üó∫Ô∏è State Highlight Map")

map_df = df.groupby("State")["Literacy Rate (%)"].mean().reset_index()

fig_map = px.choropleth(
    map_df,
    geojson=india_geojson,
    featureidkey="properties.name",
    locations="State",
    color="Literacy Rate (%)",
    color_continuous_scale="Greens",
    title="Average Literacy Rate by State"
)
fig_map.update_geos(fitbounds="locations", visible=False)
fig_map.update_layout(margin={"r":0,"t":0,"l":0,"b":0}, height=500)

st.plotly_chart(fig_map, use_container_width=True)

# ---------- Challenges ----------
st.subheader("‚ö†Ô∏è Challenges Faced")
st.info(filtered['Issues Faced'].values[0])